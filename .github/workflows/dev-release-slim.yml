name: Create Slim Dev Releases

on:
  push:
    branches:
      - main
      - 'preview/**'

jobs:
  release:
    runs-on: ubuntu-22.04
    env:
      TERM: xterm
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install node ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: npm
      - name: Install dependencies
        run: npm clean-install --prefer-offline --frozen-lockfile --production
      - name: Prepare Release
        uses: lando/prepare-release-action@v3
        with:
          version: dev
          sync: true
      - name: Ensure version
        run: node ./bin/lando version

  package:
    runs-on: ${{ matrix.runner }}
    needs:
      - release
    env:
      TERM: xterm
    strategy:
      fail-fast: false
      matrix:
        runner:
          - macos-14
          - ubuntu-22.04
        node-version:
          - '18'
        os:
          - linux
          - macos
          - win

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install node ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: npm
      - name: Install dependencies
        run: npm clean-install --prefer-offline --frozen-lockfile --production
      - name: Package into node binary
        uses: lando/pkg-action@v5
        with:
          entrypoint: bin/lando
          node-version: ${{ matrix.node-version }}
          os: ${{ matrix.os }}
          options: --options dns-result-order=ipv4first
      - name: Ensure slimcore
        if: matrix.os == 'linux' && runner.os == 'Linux' && runner.arch == 'X64'
        run: ./dist/@lando/cli config --path fatcore | grep false
      - name: Ensure ipv4first
        if: matrix.os == 'linux' && runner.os == 'Linux' && runner.arch == 'X64'
        run: ./dist/@lando/cli config --path cli.args | grep dns-result-order=ipv4first

  sign-n-deploy:
    runs-on: ${{ matrix.os }}
    needs:
      - package
    env:
      TERM: xterm
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-2022
            key: lando-cli-node18-win-x64-${{ github.sha }}
            file: lando/cli.exe
            result: lando-win-x64-main-slim.exe
          - os: windows-2022
            key: lando-cli-node18-win-arm64-${{ github.sha }}
            file: lando/cli.exe
            result: lando-win-arm64-main-slim.exe
          - os: macos-13
            key: lando-cli-node18-macos-x64-${{ github.sha }}
            file: lando/cli
            result: lando-macos-x64-main-slim
          - os: macos-13
            key: lando-cli-node18-macos-arm64-${{ github.sha }}
            file: lando/cli
            result: lando-macos-arm64-main-slim
          - os: ubuntu-22.04
            key: lando-cli-node18-linux-x64-${{ github.sha }}
            file: lando/cli
            result: lando-linux-x64-main-slim
          - os: ubuntu-22.04
            key: lando-cli-node18-linux-arm64-${{ github.sha }}
            file: lando/cli
            result: lando-linux-arm64-main-slim
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Download ${{ matrix.key }}
        uses: actions/download-artifact@v3
        with:
          name: ${{ matrix.key }}
          path: lando
      - name: Rename as needed
        shell: bash
        run: |
          mkdir -p releases
          cp ${{ matrix.file }} releases/${{ matrix.result }}
          chmod +x releases/*
          ls -lsa releases
      - name: Upload snapshot release ${{ matrix.result }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.result }}
          path: ${{ matrix.file }}
          if-no-files-found: error
          retention-days: 30
          overwrite: true

